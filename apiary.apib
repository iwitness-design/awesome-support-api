FORMAT: 1A
HOST: http://[your-site-url]/wp-json/wpas-api/v1

# Awesome Support API

The Awesome Support API allows for interaction with the Awesome Support plugin through a REST API.

## Tickets [/tickets{?page,per_page,search,after,before,exclude,include,offset,order,orderby,slug,status,state}]

### List All Tickets [GET]


+ Parameters

    + page: `1` (optional, integer) - Current page of the collection.
         + Default: `1`
         
    + per_page: `10` (optional, integer) - Maximum number of items to be returned in result set. 
        + Default: `10`
        
    + search: `custom search text` (optional, string) - Limit results to those matching a string.
    
    + after: `2017-05-23` (optional, string) - Limit response to posts created after a given ISO8601 compliant date.
    
    + before: `2017-05-32` (optional, string) - Limit response to tickets created before a given ISO8601 compliant date.
    
    + exclude: `1,2,3` (optional, array) - Ensure result set excludes specific IDs.
    
    + include: `1,2,3` (optional, array) - Limit result set to specific IDs.
    
    + offset: `1` (optional, integer) - Offset the result set by a specific number of items.
    
    + order: `desc` (optional, string) - Order sort attribute ascending or descending.
        + Default: `desc`
        + Members
            + `asc`
            + `desc`
            
    + orderby: `date` (optional, string) - Sort collection by object attribute.
        + Default: `date`
        + Members
            + `author`
            + `date`
            + `id`
            + `include`
            + `modified`
            + `parent`
            + `relevance`
            + `slug`
            + `title`
    
    + status: `any` (optional, String | Array) - Limit result set to tickets assigned one or more statuses.
        + Default: `any`
        + Members
            + `queued`
            + `processing`
            + `hold`
            + `read`
            + `unread`
            + `any`
    
    + state: `open` (optional, string) - The Ticket state to retrieve
        + Default: `open`
        + Members
            + `open`
            + `closed`
            + `any`

        
+ Response 200 (application/json)

        [
          {
            "id": 9,
            "date": "2017-05-23T04:34:51",
            "date_gmt": "2017-05-23T04:34:51",
            "guid": {
              "rendered": "http://awesomesupport.dev/?post_type=ticket&#038;p=9"
            },
            "modified": "2017-05-23T04:37:27",
            "modified_gmt": "2017-05-23T04:37:27",
            "slug": "new-ticket",
            "status": "processing",
            "type": "ticket",
            "link": "http://awesomesupport.dev/ticket/new-ticket/",
            "title": {
              "rendered": "New Ticket"
            },
            "content": {
              "rendered": "",
              "protected": false
            },
            "template": "",
            "_links": {
              "self": [
                {
                  "href": "http://awesomesupport.dev/wp-json/wpas-api/v1/tickets/9"
                }
              ],
              "collection": [
                {
                  "href": "http://awesomesupport.dev/wp-json/wpas-api/v1/tickets"
                }
              ],
              "about": [
                {
                  "href": "http://awesomesupport.dev/wp-json/wp/v2/types/ticket"
                }
              ],
              "wp:attachment": [
                {
                  "href": "http://awesomesupport.dev/wp-json/wp/v2/media?parent=9"
                }
              ],
              "curies": [
                {
                  "name": "wp",
                  "href": "https://api.w.org/{rel}",
                  "templated": true
                }
              ]
            }
          }
        ]

### Create a Ticket [POST]

You may create your own ticket using this action. It takes a JSON
object containing a ticket and a collection of answers in the
form of choices.

+ Request Create a Ticket (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }